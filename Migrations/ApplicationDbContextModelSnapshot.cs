// <auto-generated />
using System;
using ExamenUnidad3;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamenUnidad3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExamenUnidad3.Models.Citas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAtencion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaReservada")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MotivoVisita")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreVeterinario")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cita");
                });

            modelBuilder.Entity("ExamenUnidad3.Models.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int>("DosisRecomendada")
                        .HasColumnType("int");

                    b.Property<string>("FormaAdministracion")
                        .HasColumnType("longtext");

                    b.Property<string>("Indicaciones")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Medicamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "HOLA",
                            DosisRecomendada = 1,
                            FormaAdministracion = "ORAL",
                            Indicaciones = "NA",
                            Nombre = "PARACETAMIOL"
                        });
                });

            modelBuilder.Entity("ExamenUnidad3.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Especie")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<float>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Raza")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ExamenUnidad3.Models.Propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Propietarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "jaimes",
                            Correo = "milton@gmail.com",
                            Direccion = "Morelos",
                            Nombre = "Milton",
                            Telefono = 77736050
                        });
                });

            modelBuilder.Entity("ExamenUnidad3.Models.Servicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("Costo")
                        .HasColumnType("double");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<double?>("DuracionEstimada")
                        .HasColumnType("double");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("RequisitosPrevios")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Servicios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Costo = 100.0,
                            Descripcion = "Perrita con dolor de estomago",
                            DuracionEstimada = 1.3,
                            Nombre = "Desparacitación",
                            RequisitosPrevios = "estar en ayunas"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
